@misc{TFHE-rs,
  title  = {{TFHE-rs: A Pure Rust Implementation of the TFHE Scheme for Boolean and Integer Arithmetics Over Encrypted Data}},
  author = {Zama},
  year   = {2022},
  note   = {\url{https://github.com/zama-ai/tfhe-rs}}
}

@misc{RevoLUT,
  title  = {RevoLUT},
  author = {Azogagh, Sofiane},
  year   = {2024},
  note   = {\url{https://github.com/sofianeazogagh/revoLUT}}
}

@article{chillotti_tfhe_2020,
  title      = {{TFHE}: {Fast} {Fully} {Homomorphic} {Encryption} {Over} the {Torus}},
  volume     = {33},
  issn       = {0933-2790, 1432-1378},
  shorttitle = {{TFHE}},
  url        = {http://link.springer.com/10.1007/s00145-019-09319-x},
  doi        = {10.1007/s00145-019-09319-x},
  abstract   = {This work describes a fast fully homomorphic encryption scheme over the torus (TFHE), that revisits, generalizes and improves the fully homomorphic encryption (FHE) based on GSW and its ring variants. The simplest FHE schemes consist in bootstrapped binary gates. In this gate bootstrapping mode, we show that the scheme FHEW of [29] can be expressed only in terms of external product between a GSW and a LWE ciphertext. As a consequence of this result and of other optimizations, we decrease the running time of their bootstrapping from 690ms to 13ms single core, using 16MB bootstrapping key instead of 1GB, and preserving the security parameter. In leveled homomorphic mode, we propose two methods to manipulate packed data, in order to decrease the ciphertext expansion and to optimize the evaluation of look-up tables and arbitrary functions in RingGSW based homomorphic schemes. We also extend the automata logic, introduced in [31], to the eﬃcient leveled evaluation of weighted automata, and present a new homomorphic counter called TBSR, that supports all the elementary operations that occur in a multiplication. These improvements speed-up the evaluation of most arithmetic functions in a packed leveled mode, with a noise overhead that remains additive. We ﬁnally present a new circuit bootstrapping that converts LWE ciphertexts into low-noise RingGSW ciphertexts in just 137ms, which makes the leveled mode of TFHE composable, and which is fast enough to speed-up arithmetic functions, compared to the gate bootstrapping approach.},
  language   = {en},
  number     = {1},
  urldate    = {2024-02-05},
  journal    = {Journal of Cryptology},
  author     = {Chillotti, Ilaria and Gama, Nicolas and Georgieva, Mariya and Izabachène, Malika},
  month      = jan,
  year       = {2020},
  pages      = {34--91},
}

@misc{azogagh_oblivious_2023,
  title        = {Oblivious {Turing} {Machine}},
  url          = {https://eprint.iacr.org/2023/1643},
  abstract     = {In the ever-evolving landscape of Information Tech- nologies, private decentralized computing on an honest yet curious server has emerged as a prominent paradigm. While numerous schemes exist to safeguard data during computation, the focus has primarily been on protecting the confidentiality of the data itself, often overlooking the potential information leakage arising from the function evaluated by the server. Recognizing this gap, this article aims to address the issue by presenting and implementing an innovative solution for ensuring the privacy of both the data and the program. We introduce a novel approach that combines the power of Fully Homomorphic Encryption with the concept of the Turing Machine model, resulting in the first fully secure practical, non-interactive oblivious Turing Machine. Our Oblivious Turing Machine construction is based on only three hypotheses, the hardness of the Ring Learning With Error problem, the ability to homomorphically evaluate non-linear functions and the capacity to blindly rotate elements of a data structure. Only based on those three assumptions, we propose an implementation of an Oblivious Turing Machine relying on the TFHE cryptosystem and present some implementation results.},
  urldate      = {2024-02-05},
  author       = {Azogagh, Sofiane and Deflour, Victor and Killijian, Marc-Olivier},
  howpublished = {Cryptology ePrint Archive, Paper 2023/1643},
  year         = {2023},
  keywords     = {Blind Matrix Access, Fully Homomorphic Encryption, Oblivious computing, TFHE, Turing machine},
  note         = {\url{https://eprint.iacr.org/2023/1643}}
}

@article{iliashenko_faster_2021,
  title   = {Faster homomorphic comparison operations for {BGV} and {BFV}},
  issn    = {2299-0984},
  url     = {https://petsymposium.org/popets/2021/popets-2021-0046.php},
  urldate = {2024-01-25},
  journal = {Proceedings on Privacy Enhancing Technologies},
  author  = {Iliashenko, Ilia and Zucca, Vincent},
  year    = {2021},
}

@incollection{lauter_depth_2015,
  address   = {Cham},
  title     = {Depth {Optimized} {Efficient} {Homomorphic} {Sorting}},
  volume    = {9230},
  isbn      = {978-3-319-22173-1 978-3-319-22174-8},
  url       = {https://link.springer.com/10.1007/978-3-319-22174-8_4},
  abstract  = {We introduce a sorting scheme which is capable of eﬃciently sorting encrypted data without the secret key. The technique is obtained by focusing on the multiplicative depth of the sorting circuit alongside the more traditional metrics such as number of comparisons and number of iterations. The reduced depth allows much reduced noise growth and thereby makes it possible to select smaller parameter sizes in somewhat homomorphic encryption instantiations resulting in greater eﬃciency savings. We ﬁrst consider a number of well known comparison based sorting algorithms as well as some sorting networks, and analyze their circuit implementations with respect to multiplicative depth. In what follows, we introduce a new ranking based sorting scheme and rigorously analyze the multiplicative depth complexity as O(log(N )+log( )), where N is the size of the array to be sorted and is the bit size of the array elements. Finally, we simulate our sorting scheme using a leveled/batched instantiation of a SWHE library. Our sorting scheme performs favorably over the analyzed classical sorting algorithms.},
  language  = {en},
  urldate   = {2024-02-05},
  booktitle = {Progress in {Cryptology} -- {LATINCRYPT} 2015},
  publisher = {Springer International Publishing},
  author    = {Çetin, Gizem S. and Doröz, Yarkın and Sunar, Berk and Savaş, Erkay},
  editor    = {Lauter, Kristin and Rodríguez-Henríquez, Francisco},
  year      = {2015},
  doi       = {10.1007/978-3-319-22174-8_4},
  note      = {Series Title: Lecture Notes in Computer Science},
  pages     = {61--80},
}

@article{marcolla_survey_2022,
  title   = {Survey on {Fully} {Homomorphic} {Encryption}, {Theory}, and {Applications}},
  volume  = {110},
  issn    = {0018-9219},
  doi     = {10.1109/JPROC.2022.3205665},
  number  = {10},
  journal = {Proceedings of the IEEE},
  author  = {Marcolla, Chiara and Sucasas, Victor and Manzano, Marc and Bassoli, Riccardo and Fitzek, Frank H. P. and Aaraj, Najwa},
  year    = {2022},
}

@misc{baldimtsi_sorting_2014,
	title = {Sorting and {Searching} {Behind} the {Curtain}: {Private} {Outsourced} {Sort} and {Frequency}-{Based} {Ranking} of {Search} {Results} {Over} {Encrypted} {Data}},
	shorttitle = {Sorting and {Searching} {Behind} the {Curtain}},
	url = {https://eprint.iacr.org/2014/1017},
	abstract = {We study the problem of private outsourced sorting of encrypted
data. We start by proposing a novel sorting protocol that allows a user to outsource his data to a cloud server in an encrypted form and then request the server to perform computations on this data and sort the result. To perform the sorting the server is assisted by a secure coprocessor with minimal computational and memory resources. The server and the coprocessor are assumed to be honest but curious, i.e., they honestly follow the protocol but are interested in learning more about the user data. We refer to the new protocol as ``private outsourced sorting'' since it guarantees that neither the server
nor the coprocessor learn anything about user data as long as they are
non-colluding. We formally define private outsourced sorting and provide an efficient construction that is based on semi-homomorphic encryption.

As an application of our private sort, we present MSRE: the first scheme for outsourced search over encrypted data that efficiently answers multi-term queries with the result ranked using frequency of query terms in the data, while maintaining data privacy. To construct MSRE we use searchable encryption techniques combined with our new private sort framework. Finally, although not discussed in this work, we believe that our private sort framework can turn out to be an important tool for more applications that require outsourced sorting while maintaining data privacy, e.g., database queries.},
	urldate = {2024-02-29},
	author = {Baldimtsi, Foteini and Ohrimenko, Olga},
	year = {2014},
	note = {Publication info: Published elsewhere. Major revision. Financial Cryptography and Data Security (FC) 2015},
	file = {Full Text PDF:/Users/filedesless/Zotero/storage/CQWFDSIW/Baldimtsi and Ohrimenko - 2014 - Sorting and Searching Behind the Curtain Private .pdf:application/pdf},
}

@misc{choffrut_sable_2023,
	title = {{SABLE}: {Secure} {And} {Byzantine} robust {LEarning}},
	shorttitle = {{SABLE}},
	url = {http://arxiv.org/abs/2309.05395},
	abstract = {Due to the widespread availability of data, machine learning (ML) algorithms are increasingly being implemented in distributed topologies, wherein various nodes collaborate to train ML models via the coordination of a central server. However, distributed learning approaches face significant vulnerabilities, primarily stemming from two potential threats. Firstly, the presence of Byzantine nodes poses a risk of corrupting the learning process by transmitting inaccurate information to the server. Secondly, a curious server may compromise the privacy of individual nodes, sometimes reconstructing the entirety of the nodes' data. Homomorphic encryption (HE) has emerged as a leading security measure to preserve privacy in distributed learning under non-Byzantine scenarios. However, the extensive computational demands of HE, particularly for high-dimensional ML models, have deterred attempts to design purely homomorphic operators for non-linear robust aggregators. This paper introduces SABLE, the first homomorphic and Byzantine robust distributed learning algorithm. SABLE leverages HTS, a novel and efficient homomorphic operator implementing the prominent coordinate-wise trimmed mean robust aggregator. Designing HTS enables us to implement HMED, a novel homomorphic median aggregator. Extensive experiments on standard ML tasks demonstrate that SABLE achieves practical execution times while maintaining an ML accuracy comparable to its non-private counterpart.},
	urldate = {2024-03-01},
	publisher = {arXiv},
	author = {Choffrut, Antoine and Guerraoui, Rachid and Pinot, Rafael and Sirdey, Renaud and Stephan, John and Zuber, Martin},
	month = dec,
	year = {2023},
	note = {arXiv:2309.05395 [cs]
version: 4},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Machine Learning},
	file = {arXiv.org Snapshot:/Users/filedesless/Zotero/storage/62A4TVRU/2309.html:text/html;Full Text PDF:/Users/filedesless/Zotero/storage/H9IJU6PX/Choffrut et al. - 2023 - SABLE Secure And Byzantine robust LEarning.pdf:application/pdf},
}

@misc{cryptoeprint:2011/122,
      author = {Kristjän Valur Jönsson and Gunnar Kreitz and Misbah Uddin},
      title = {Secure Multi-Party Sorting and Applications},
      howpublished = {Cryptology ePrint Archive, Paper 2011/122},
      year = {2011},
      note = {\url{https://eprint.iacr.org/2011/122}},
      url = {https://eprint.iacr.org/2011/122}
}

@article{zuber2021efficient,
  title={Efficient homomorphic evaluation of k-NN classifiers.},
  author={Zuber, Martin and Sirdey, Renaud},
  journal={Proc. Priv. Enhancing Technol.},
  volume={2021},
  number={2},
  pages={111--129},
  year={2021}
}


@inproceedings{gentry_fully_2009,
	address = {New York, NY, USA},
	series = {{STOC} '09},
	title = {Fully homomorphic encryption using ideal lattices},
	isbn = {978-1-60558-506-2},
	url = {https://doi.org/10.1145/1536414.1536440},
	doi = {10.1145/1536414.1536440},
	abstract = {We propose a fully homomorphic encryption scheme -- i.e., a scheme that allows one to evaluate circuits over encrypted data without being able to decrypt. Our solution comes in three steps. First, we provide a general result -- that, to construct an encryption scheme that permits evaluation of arbitrary circuits, it suffices to construct an encryption scheme that can evaluate (slightly augmented versions of) its own decryption circuit; we call a scheme that can evaluate its (augmented) decryption circuit bootstrappable. Next, we describe a public key encryption scheme using ideal lattices that is almost bootstrappable. Lattice-based cryptosystems typically have decryption algorithms with low circuit complexity, often dominated by an inner product computation that is in NC1. Also, ideal lattices provide both additive and multiplicative homomorphisms (modulo a public-key ideal in a polynomial ring that is represented as a lattice), as needed to evaluate general circuits. Unfortunately, our initial scheme is not quite bootstrappable -- i.e., the depth that the scheme can correctly evaluate can be logarithmic in the lattice dimension, just like the depth of the decryption circuit, but the latter is greater than the former. In the final step, we show how to modify the scheme to reduce the depth of the decryption circuit, and thereby obtain a bootstrappable encryption scheme, without reducing the depth that the scheme can evaluate. Abstractly, we accomplish this by enabling the encrypter to start the decryption process, leaving less work for the decrypter, much like the server leaves less work for the decrypter in a server-aided cryptosystem.},
	urldate = {2024-03-19},
	booktitle = {Proceedings of the forty-first annual {ACM} symposium on {Theory} of computing},
	publisher = {Association for Computing Machinery},
	author = {Gentry, Craig},
	month = may,
	year = {2009},
	keywords = {fully homomorphic encryption},
	pages = {169--178},
	file = {Submitted Version:/Users/filedesless/Zotero/storage/K7FCQPKT/Gentry - 2009 - Fully homomorphic encryption using ideal lattices.pdf:application/pdf},
}

@article{Rivest1978,
  added-at = {2011-02-14T16:52:54.000+0100},
  author = {Rivest, R L and Adleman, L and Dertouzos, M L},
  biburl = {https://www.bibsonomy.org/bibtex/2df214f59ac3cc15fbfaf6d0606eb340c/fohv},
  date-modified = {2006-08-22 11:34:23 +0200},
  interhash = {c880dde05ce4210752a154a7c0b6fd31},
  intrahash = {df214f59ac3cc15fbfaf6d0606eb340c},
  journal = {Foundations of Secure Computation, Academia Press},
  keywords = {imported},
  pages = {169-179},
  timestamp = {2011-02-14T16:53:02.000+0100},
  title = {On Data Banks and Privacy Homomorphisms},
  year = 1978
}

@article{elgamal1985public,
  title={A public key cryptosystem and a signature scheme based on discrete logarithms},
  author={ElGamal, Taher},
  journal={IEEE transactions on information theory},
  volume={31},
  number={4},
  pages={469--472},
  year={1985},
  publisher={IEEE}
}

@InProceedings{paillier1999,
	author="Paillier, Pascal",
	editor="Stern, Jacques",
	title="Public-Key Cryptosystems Based on Composite Degree Residuosity Classes",
	booktitle="Advances in Cryptology --- EUROCRYPT '99",
	year="1999",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="223--238",
	abstract="This paper investigates a novel computational problem, namely the Composite Residuosity Class Problem, and its applications to public-key cryptography. We propose a new trapdoor mechanism and derive from this technique three encryption schemes: a trapdoor permutation and two homomorphic probabilistic encryption schemes computationally comparable to RSA. Our cryptosystems, based on usual modular arithmetics, are provably secure under appropriate assumptions in the standard model.",
	isbn="978-3-540-48910-8"
}

@inproceedings{benaloh1994dense,
  title={Dense probabilistic encryption},
  author={Benaloh, Josh},
  booktitle={Proceedings of the workshop on selected areas of cryptography},
  pages={120--128},
  year={1994}
}

@article{rivest_method_1978,
	title = {A method for obtaining digital signatures and public-key cryptosystems},
	volume = {21},
	issn = {0001-0782},
	url = {https://dl.acm.org/doi/10.1145/359340.359342},
	doi = {10.1145/359340.359342},
	abstract = {An encryption method is presented with the novel property that publicly revealing an encryption key does not thereby reveal the corresponding decryption key. This has two important consequences: (1) Couriers or other secure means are not needed to transmit keys, since a message can be enciphered using an encryption key publicly revealed by the intented recipient. Only he can decipher the message, since only he knows the corresponding decryption key. (2) A message can be “signed” using a privately held decryption key. Anyone can verify this signature using the corresponding publicly revealed encryption key. Signatures cannot be forged, and a signer cannot later deny the validity of his signature. This has obvious applications in “electronic mail” and “electronic funds transfer” systems. A message is encrypted by representing it as a number M, raising M to a publicly specified power e, and then taking the remainder when the result is divided by the publicly specified product, n, of two large secret primer numbers p and q. Decryption is similar; only a different, secret, power d is used, where e * d ≡ 1(mod (p - 1) * (q - 1)). The security of the system rests in part on the difficulty of factoring the published divisor, n.},
	number = {2},
	urldate = {2024-01-26},
	journal = {Communications of the ACM},
	author = {Rivest, R. L. and Shamir, A. and Adleman, L.},
	month = feb,
	year = {1978},
	keywords = {authentication, cryptography, digital signatures, electronic funds transfer, electronic mail, factorization, message-passing, prime number, privacy, public-key cryptosystems, security, RSA},
	pages = {120--126},
	file = {Full Text PDF:/Users/filedesless/Zotero/storage/B4VUS56Q/Rivest et al. - 1978 - A method for obtaining digital signatures and publ.pdf:application/pdf},
}

@misc{regev_lattices_2009,
	title = {On {Lattices}, {Learning} with {Errors}, {Random} {Linear} {Codes}, and {Cryptography}},
	url = {http://arxiv.org/abs/2401.03703},
	doi = {10.48550/arXiv.2401.03703},
	abstract = {Our main result is a reduction from worst-case lattice problems such as GapSVP and SIVP to a certain learning problem. This learning problem is a natural extension of the `learning from parity with error' problem to higher moduli. It can also be viewed as the problem of decoding from a random linear code. This, we believe, gives a strong indication that these problems are hard. Our reduction, however, is quantum. Hence, an efficient solution to the learning problem implies a quantum algorithm for GapSVP and SIVP. A main open question is whether this reduction can be made classical (i.e., non-quantum). We also present a (classical) public-key cryptosystem whose security is based on the hardness of the learning problem. By the main result, its security is also based on the worst-case quantum hardness of GapSVP and SIVP. The new cryptosystem is much more efficient than previous lattice-based cryptosystems: the public key is of size \${\textbackslash}tilde\{O\}(n{\textasciicircum}2)\$ and encrypting a message increases its size by a factor of \${\textbackslash}tilde\{O\}(n)\$ (in previous cryptosystems these values are \${\textbackslash}tilde\{O\}(n{\textasciicircum}4)\$ and \${\textbackslash}tilde\{O\}(n{\textasciicircum}2)\$, respectively). In fact, under the assumption that all parties share a random bit string of length \${\textbackslash}tilde\{O\}(n{\textasciicircum}2)\$, the size of the public key can be reduced to \${\textbackslash}tilde\{O\}(n)\$.},
	urldate = {2024-03-20},
	publisher = {arXiv},
	author = {Regev, Oded},
	month = jan,
	year = {2009},
	note = {arXiv:2401.03703 [quant-ph]},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Computational Complexity, Quantum Physics},
	annote = {Comment: Identical to the version posted in 2009, apart from fixing a bug in the proof of Claim 3.13},
	file = {arXiv Fulltext PDF:/Users/filedesless/Zotero/storage/3Y5RFCFI/Regev - 2024 - On Lattices, Learning with Errors, Random Linear C.pdf:application/pdf;arXiv.org Snapshot:/Users/filedesless/Zotero/storage/TDC4HCKV/2401.html:text/html},
}

@misc{LWE,
    author = {{Zama.ai}},
    year = 2022,
    title = {GLWE encoding coefficients},
    url = {https://www.zama.ai/post/tfhe-deep-dive-part-1}
}

@misc{LUT,
    author = {{Zama.ai}},
    year = 2022,
    title = {GLWE encoding coefficients},
    url = {https://www.zama.ai/post/tfhe-deep-dive-part-4}
}

@misc{fung2021simplest,
      title={Is this the simplest (and most surprising) sorting algorithm ever?}, 
      author={Stanley P. Y. Fung},
      year={2021},
      eprint={2110.01111},
      archivePrefix={arXiv},
      primaryClass={cs.DS}
}